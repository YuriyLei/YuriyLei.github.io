<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuriy</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-28T09:22:17.346Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yuriy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo+Github搭建个人博客</title>
    <link href="http://yoursite.com/2016/07/27/Hexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/07/27/Hexo+Github搭建个人博客/</id>
    <published>2016-07-27T03:51:53.000Z</published>
    <updated>2016-07-28T09:22:17.346Z</updated>
    
    <content type="html"><![CDATA[<p>今天使用hexo+github搭建了个人博客，以此文记录一下，本文介绍在window环境下搭建免费的个人博客，使用hexo+github，其中hexo使用next主题。node.js版本为v6.2.0，Hexo版本为v3.2.</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><blockquote>
<ul>
<li>确保PC上有<a href="https://git-scm.com/download" target="_blank" rel="external">Git环境</a>。如果没有配置环境变量，请在git bash中使用命令。<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git教程</a></li>
<li>确保PC上有<a href="http://nodejs.cn/" target="_blank" rel="external">node.js环境</a>.</li>
<li>申请<a href="https://github.com/" target="_blank" rel="external">Github账号</a>。可以配置SSH，当然也可以不配，建议<a href="http://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html" target="_blank" rel="external">配置SSH</a>。</li>
</ul>
</blockquote>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>完成准备工作之后，就可以安装Hexo了。安装十分简单，仅需一条命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo-cli</div></pre></td></tr></table></figure></p>
<h2 id="建设你的站点"><a href="#建设你的站点" class="headerlink" title="建设你的站点"></a>建设你的站点</h2><p>你需要新建一个文件夹，用于存放hexo的文件，例如: 在D盘新建blog文件夹。使用命令切换到blog文件夹，使用下面的命令初始化blog文件夹:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init  //初始化hexo</div></pre></td></tr></table></figure></p>
<p>在命令成功之后，会产生下面的目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">├── _config.yml           //站点配置（后面的站点配置都是这个文件）</div><div class="line">├── package.json          //应用程序信息，可以移除和添加</div><div class="line">├── scaffolds             //模版文件夹。新建文章时，Hexo 会根据 scaffold 来建立文件。</div><div class="line">├── source                //资源文件夹是存放用户资源的地方。</div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── themes                //主题文件夹。Hexo会根据主题来生成静态页面,本文使用Next主题。</div></pre></td></tr></table></figure></p>
<p>正确产生上面的内容之后，使用下面的命令，生成静态文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure></p>
<p>如果正确生成静态文件，使用server命令，可以在本地启动服务，实现预览.默认端口为4000<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s</div></pre></td></tr></table></figure></p>
<p>server命令有如下选项：</p>
<table>
<thead>
<tr>
<th style="text-align:center">选项</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">-p</td>
<td style="text-align:center">设置端口</td>
</tr>
<tr>
<td style="text-align:center">-s</td>
<td style="text-align:center">仅使用静态文件</td>
</tr>
<tr>
<td style="text-align:center">-l</td>
<td style="text-align:center">启动日志记录</td>
</tr>
</tbody>
</table>
<p>在浏览器中访问<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 可以看到当前效果。</p>
<h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><p>到这一步的时候，你已经可以在本地看到博客效果，下面将静态文件部署到Github上。这时就需要一个申请好的Github账号。</p>
<h3 id="建立Repository"><a href="#建立Repository" class="headerlink" title="建立Repository"></a>建立Repository</h3><pre><code>在Github上新建一个Repository。注意：仓库名必须为your_github_username.github.io
</code></pre><h3 id="修改站点配置"><a href="#修改站点配置" class="headerlink" title="修改站点配置"></a>修改站点配置</h3><pre><code>在`站点配置`中找到depoloy，修改成：
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">    type: git </div><div class="line">    repo: https://github.com/your_github_username/your_github_username.github.io.git</div><div class="line">    branch: master</div></pre></td></tr></table></figure>
<p>注意：所有的 配置属性的”: “后面必须跟一个空格</p>
<h3 id="安装hexo-deployer-git"><a href="#安装hexo-deployer-git" class="headerlink" title="安装hexo-deployer-git"></a>安装hexo-deployer-git</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g</div></pre></td></tr></table></figure>
<h3 id="部署到Github-1"><a href="#部署到Github-1" class="headerlink" title="部署到Github"></a>部署到Github</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure>
<p>到此，已经把hexo生成的静态文件部署到Github上了，可以通过<a href="http://your_github_username.github.io/" target="_blank" rel="external">http://your_github_username.github.io/</a> 访问你的个人博客了。一般可以使用下面的步骤来部署：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean </div><div class="line">hexo g         //生成静态文件</div><div class="line">hexo s         //启动服务，此时可以本地预览，如果对自己的修改不满意，可以重新修改后，再部署，当然，这个步骤可以跳过</div><div class="line">hexo d         //部署到Github</div></pre></td></tr></table></figure></p>
<h3 id="添加文章"><a href="#添加文章" class="headerlink" title="添加文章"></a>添加文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new [layout] &lt;title&gt;</div></pre></td></tr></table></figure>
<p>指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来修改默认布局。</p>
<p>布局（Layout）<br>Hexo 有三种默认布局：post、page 和draft，它们分别对应不同的路径，自定义的其他布局和post 相同，都保存到 your-hexo-site/source/_post文件夹下。</p>
<table>
<thead>
<tr>
<th style="text-align:center">布局</th>
<th style="text-align:center">目录</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">page</td>
<td style="text-align:center">source</td>
</tr>
<tr>
<td style="text-align:center">post</td>
<td style="text-align:center">source/_posts</td>
</tr>
<tr>
<td style="text-align:center">draft</td>
<td style="text-align:center">source/_drafts</td>
</tr>
</tbody>
</table>
<p>新建文章之后，你可以编辑文章，支持Markdown写作。</p>
<h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>如果你觉得默认的主题不符合心意，你可以使用自己喜欢的主题，替换掉默认的主题。</p>
<h3 id="获取主题"><a href="#获取主题" class="headerlink" title="获取主题"></a>获取主题</h3><p>可以到Github上使用git clone命令获取<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">Hexo Next主题</a>。将获得的主题文件夹拷贝到到站点目录的themes目录下。</p>
<h3 id="替换主题"><a href="#替换主题" class="headerlink" title="替换主题"></a>替换主题</h3><p>在<code>站点配置</code>中修改theme。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: hexo-theme-next   //替换为自己的主题文件夹名字即可</div></pre></td></tr></table></figure></p>
<p>恭喜！你可以使用前面所述的步骤，预览新的主题了。</p>
<h2 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h2><p>一个主题，你可以对他进行个性化的配置，以下将介绍一些常用的配置。<br>注：在主题文件夹下有一个_config.yml。为了与<code>站点配置</code>相区别，这里使用<code>主题配置</code>来指代。</p>
<h3 id="关于scheme"><a href="#关于scheme" class="headerlink" title="关于scheme"></a>关于scheme</h3><p>scheme提供了几种不同的外观，你可以随意切换next提供的所有scheme，以为所有的配置都是共用的，不会因为更改scheme而更改。<br>默认提供Muse，你还可以使用Mist，Pisces，你只需要修改<code>主题配置</code>中的scheme: Muse即可</p>
<h3 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h3><p>修改<code>站点配置</code>中的language: zh-Hans<br>支持的语言如下：</p>
<table>
<thead>
<tr>
<th>语言</th>
<th>设定</th>
</tr>
</thead>
<tbody>
<tr>
<td>English</td>
<td>language: en</td>
</tr>
<tr>
<td>简体中文</td>
<td>language: zh-Hans</td>
</tr>
<tr>
<td>Français</td>
<td>language: fr-FR</td>
</tr>
<tr>
<td>Português</td>
<td>language: pt</td>
</tr>
<tr>
<td>繁體中文</td>
<td>language: zh-hk/language:zh-tw</td>
</tr>
<tr>
<td>Русский язык</td>
<td>language: ru</td>
</tr>
<tr>
<td>Deutsch</td>
<td>language: de</td>
</tr>
<tr>
<td>日本語</td>
<td>language: ja</td>
</tr>
<tr>
<td>Indonesian</td>
<td>language: id</td>
</tr>
</tbody>
</table>
<h3 id="Menu"><a href="#Menu" class="headerlink" title="Menu"></a>Menu</h3><p>修改<code>站点配置</code>中的menu: 即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">menu:          //可以自己添加也可以注释，注意如果没有页面，请新建页面</div><div class="line">  home: /           </div><div class="line">  archives: /archives</div><div class="line">  #about: /about</div><div class="line">  #categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  #commonweal: /404.html</div></pre></td></tr></table></figure></p>
<p>例如:如果打开了#categories: /categories,并且当前没有这个页面。请使用:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd your-hexo-site</div><div class="line">hexo new page categories</div></pre></td></tr></table></figure></p>
<p>然后在your-hexo-site\source\categories  目录下，有index.md，编辑index.md</p>
<blockquote>
<p>title: 分类<br>date: 2016-12-22 12:39:04<br>type: “categories”   //这是需要注意的</p>
</blockquote>
<h3 id="代码高亮配置"><a href="#代码高亮配置" class="headerlink" title="代码高亮配置"></a>代码高亮配置</h3><p>在<code>主题配置</code>中有代码高亮的配置，默认为highlight_theme: mormal<br>可选的值有normal,night,night eighties,night blue,night bright<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Code Highlight theme</div><div class="line"># Available value: normal | night | night eighties | night blue | night bright</div><div class="line"># https://github.com/chriskempson/tomorrow-theme</div><div class="line">highlight_theme: normal</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天使用hexo+github搭建了个人博客，以此文记录一下，本文介绍在window环境下搭建免费的个人博客，使用hexo+github，其中hexo使用next主题。node.js版本为v6.2.0，Hexo版本为v3.2.&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a hr
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
